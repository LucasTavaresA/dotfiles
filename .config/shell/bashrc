# Se não executando bash interativamente
# Não executa o resto do bashrc
[[ $- != *i* ]] && return

# Aliases
alias n='neofetch'
alias v='nvim'
alias h="htop"
alias ed="emacs --daemon"
alias ek="emacsclient -e '(kill-emacs)'"
alias e='emacsclient -n -c'
alias copy='xclip -selection clipboard'
alias sudo='doas'
alias p='ping google.com'
alias yt='yt-dlp'
alias yta='yt-dlp -x --audio-format mp3'
alias ka="doas killall"
alias mi="make install"
alias mu="make uninstall"
alias dh="doom help"
alias ds="doom sync"
alias dd="doom doctor"
alias du="doom upgrade"
alias dr="doom run"
alias dp="doom purge"
alias dmi="doas make install"
alias dmu="doas make uninstall"
alias dnr="dotnet run"
alias dnn="dotnet new"
alias dns="dotnet-script"
alias xp="xprop"
alias xk="xkill"
alias grep="grep --color -i"
alias sys="doas systemctl"
# Arquivos e Diretórios
alias l='lsd -l --group-dirs first'
alias la='lsd -A --group-dirs first'
alias lla='lsd -lA --group-dirs first'
alias ..='cd ..'
alias ...="cd ../.."
alias ....="cd ../../.."
alias lo='locate -Ai'
alias u='sudo updatedb'
alias ch='chmod +x'
alias cp="cp -ri"
alias mv="mv -i"
alias rm="rm -rI"
alias ln="ln -i"
alias md="mkdir -p"
alias t="touch"
alias mnt="doas mount"
alias umnt="doas umount"
# Git
alias gi='git init'
alias gc='git clone'
alias gs='git status'
alias gsr="git_status_recursivo"
alias gd='git diff'
alias gds='git diff --staged'
alias gl='git log --oneline'
alias ga='git add'
alias gaf='git add -f'
alias gcm='git commit -m'
alias gco="git checkout"
alias gps='git push'
alias gpl='git pull'
alias gr='git restore'
alias grs="git restore --staged"
alias grrs='git reset --soft'
alias grrh='git reset --hard'
# Pacman
alias ps='doas pacman -S'
alias psi='pacman -Si'
alias pss='pacman -Ss'
alias psyu='doas pacman -Syu'
alias pqs='pacman -Qs'
alias prns='doas pacman -Rns'
alias exp="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n"
# Paru
alias pps="paru -S"
alias ppsi="paru -Si"
alias ppss="paru -Ss"
alias ppsyu="paru -Syu"
alias ppqs="paru -Qs"
alias pprns="paru -Rns"

# Ignora case-sensitivity quando completa comandos com tab
if [ ! -a $HOME/.config/readline/inputrc ]; then echo '$include /etc/inputrc' > $HOME/.config/readline/inputrc; fi
echo 'set completion-ignore-case On' >> $HOME/.config/readline/inputrc
# Corrige automaticamente erros ao usar o cd
shopt -s cdspell
# Salva comandos de múltiplas linhas como uma linha única
shopt -s cmdhist

# Previsão de imagens no lf
lf () {
    LF_TEMPDIR="$(mktemp -d -t lf-tempdir-XXXXXX)"
    LF_TEMPDIR="$LF_TEMPDIR" lf-run -last-dir-path="$LF_TEMPDIR/lastdir" "$@"
    if [ "$(cat "$LF_TEMPDIR/cdtolastdir" 2>/dev/null)" = "1" ]; then
	cd "$(cat "$LF_TEMPDIR/lastdir")"
    fi
    rm -r "$LF_TEMPDIR"
    unset LF_TEMPDIR
}

### Facilita extrair arquivos
# Exemplo: ex <arquivo>
ex ()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' não pode ser extraído com ex()" ;;
    esac
  else
    echo "'$1' não é um arquivo valido"
  fi
}

# Inicia prompt do starship
eval "$(starship init bash)"
